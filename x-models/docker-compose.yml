# In: docker-compose.yml

services:
  app:
    build: .
    ports:
      - "3000:3000"
    volumes:
      # --- THIS IS THE FIX ---
      # Instead of mounting the entire directory, we mount only what we need for live-reloading.
      # We explicitly DO NOT mount node_modules.
      - ./app:/app/app
      - ./components:/app/components
      - ./lib:/app/lib
      - ./prisma:/app/prisma
      - ./public:/app/public
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./next.config.mjs:/app/next.config.mjs
      - ./tsconfig.json:/app/tsconfig.json
      - ./tailwind.config.mjs:/app/tailwind.config.mjs
      # This line now works as intended, because there is no conflict.
      # It will be populated with the correctly-built node_modules from the image.
      - node_modules_volume:/app/node_modules

    command: pnpm dev

    depends_on:
      db:
        condition: service_healthy

    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/mydb
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  node_modules_volume: {}
